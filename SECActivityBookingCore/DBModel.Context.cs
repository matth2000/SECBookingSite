//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBModelContainer : DbContext
    {
        public DBModelContainer()
            : base("name=DBModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<AgeGroup> AgeGroups { get; set; }
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<Participant> Participants { get; set; }
        public virtual DbSet<SessionGroup> SessionGroups { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
    
        public virtual ObjectResult<Session> GetParticipantSessions(Nullable<int> participantId)
        {
            var participantIdParameter = participantId.HasValue ?
                new ObjectParameter("ParticipantId", participantId) :
                new ObjectParameter("ParticipantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetParticipantSessions", participantIdParameter);
        }
    
        public virtual ObjectResult<Session> GetParticipantSessions(Nullable<int> participantId, MergeOption mergeOption)
        {
            var participantIdParameter = participantId.HasValue ?
                new ObjectParameter("ParticipantId", participantId) :
                new ObjectParameter("ParticipantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetParticipantSessions", mergeOption, participantIdParameter);
        }
    }
}
